import sage.all
from sage.rings.finite_rings.finite_field_constructor import *
from sage.groups.generic import discrete_log
p = 143934749405770267808039109533241671783161568136679499142376907171125336784176335731782823029409453622696871327278373730914810500964540833790836471525295291332255885782612535793955727295077649715977839675098393245636668277194569964284391085500147264756136769461365057766454689540925417898489465044267493955801
a = GF(p)(-3)
b = GF(p)(2)

# equation eqal to (x - 1)^2 * (x + 2) = y^2
# type node
alpha = GF(p)(1)
beta = GF(p)(-2)
co1 = (alpha - beta).sqrt()

bx, by = 101806057140780850544714530443644783825785167075147195900696966628348944447492085252540090679241301721340985975519224144331425477628386574016040358648752353263802400527250163297781189749285392087154377684890287451078937692380556192126971669069015673662635561425735593795743852141232711066181542250670387203333, 21070877061047140448223994337863615306499412743288524847405886929295212764999318872250771845966630538832460153205159221566590942573559588219757767072634072564645999959084653451405037079311490089767010764955418929624276491280034578150363584012913337588035080509421139229710578342261017441353044437092977119013
cx, cy = 98015495932907076864096258407988962007376328849899810250322002325625359735922937686533359455570369291999900476297694445557845368802830788062976760815467239661283157094425185337540578842851843497177780602415322706226426265515846633379203744588829488176045794602858847864402137150751961826536524265308139934971, 87166136054299272658534592982430361675520319206099499992529237663935246617561944716447831162561604277568397630920048376392806047558420891922813475124718967889074322061747341780368922425396061468851460185861964432392408561769588468524187868171386564578362923777824279396698093857550091931091983893092436864205
bx = GF(p)(bx)
by = GF(p)(by)
cx = GF(p)(cx)
cy = GF(p)(cy)

# \alpha = 1
# \beta = -2
def iso_map(x, y):
    tmp = co1 * (x - alpha)
    return (y + tmp) / (y - tmp)
flag = hex(discrete_log(iso_map(cx, cy), iso_map(bx, by)))[2:]
print(bytes.fromhex(flag))
